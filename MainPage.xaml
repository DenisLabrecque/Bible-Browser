<Page
   x:Class="BibleBrowserUWP.MainPage"
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
   xmlns:local1="using:BibleBrowserUWP"
   xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
   mc:Ignorable="d"
   Background="{ThemeResource ReceptusAcrylicAccentWindow}" FontFamily="Segoe MDL2 Assets"
   Name="root">

   <Page.KeyboardAccelerators>
      <KeyboardAccelerator Modifiers="None" Key="None"/>
      <!-- HACK: prevents the tooltip from displaying a keyboard shortcut -->
      <KeyboardAccelerator Modifiers="Control" Key="S" Invoked="KeyboardAccelerator_Search"/>
   </Page.KeyboardAccelerators>

   <Page.Resources>

      <Style x:Key="Flyout" TargetType="FlyoutPresenter">
         <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
         <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
         <Setter Property="IsTabStop" Value="False"/>
         <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
         <Setter Property="Padding" Value="0,5"/>
         <Setter Property="Background" Value="{ThemeResource ReceptusAcrylicMutedElement}"/>
         <Setter Property="BorderBrush" Value="{ThemeResource ReceptusGrey}"/>
      </Style>

      <Style x:Key="CommandButton" TargetType="Button" BasedOn="{StaticResource ButtonRevealStyle}">
         <Setter Property="BorderThickness" Value="1"/>
         <Setter Property="Margin" Value="1"/>
         <Setter Property="Background" Value="Transparent"/>
         <Setter Property="FontSize" Value="15"/>
         <Setter Property="Height" Value="38"/>
         <Setter Property="Width" Value="40"/>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="Button">
                  <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">

                     <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                           <VisualState x:Name="Normal">
                              <VisualState.Setters>
                                 <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonColour}" />
                              </VisualState.Setters>

                              <Storyboard>
                                 <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                              </Storyboard>
                           </VisualState>

                           <VisualState x:Name="PointerOver">
                              <VisualState.Setters>
                                 <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                 <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPointerOver}" />
                                 <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}" />
                                 <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonColour}" />
                              </VisualState.Setters>

                              <Storyboard>
                                 <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                              </Storyboard>
                           </VisualState>

                           <VisualState x:Name="Pressed">
                              <VisualState.Setters>
                                 <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                 <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPressed}" />
                                 <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}" />
                                 <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonColour}" />
                              </VisualState.Setters>

                              <Storyboard>
                                 <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                              </Storyboard>
                           </VisualState>

                           <VisualState x:Name="Disabled">
                              <VisualState.Setters>
                                 <Setter Target="RootGrid.Background" Value="Transparent" />
                                 <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushDisabled}" />
                                 <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource DisabledButtonColour}" />
                              </VisualState.Setters>
                           </VisualState>

                        </VisualStateGroup>

                     </VisualStateManager.VisualStateGroups>
                     <ContentPresenter x:Name="ContentPresenter" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />

                  </Grid>

               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <!-- More Button -->
      <Style x:Key="TabBarButton" TargetType="Button" BasedOn="{StaticResource CommandButton}">
         <Setter Property="Height" Value="30"/>
         <Setter Property="Width" Value="35"/>
         <Setter Property="Foreground" Value="{ThemeResource ButtonColour}"/>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="Button">
                  <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">

                     <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                           <VisualState x:Name="Normal">
                              <Storyboard>
                                 <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                              </Storyboard>
                           </VisualState>

                           <VisualState x:Name="PointerOver">
                              <VisualState.Setters>
                                 <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                 <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPointerOver}" />
                                 <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}" />
                                 <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonColour}" />
                              </VisualState.Setters>

                              <Storyboard>
                                 <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                              </Storyboard>
                           </VisualState>

                           <VisualState x:Name="Pressed">
                              <VisualState.Setters>
                                 <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                 <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPressed}" />
                                 <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}" />
                                 <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonColour}" />
                              </VisualState.Setters>

                              <Storyboard>
                                 <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                              </Storyboard>
                           </VisualState>

                           <VisualState x:Name="Disabled">
                              <VisualState.Setters>
                                 <Setter Target="RootGrid.Background" Value="Transparent" />
                                 <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushDisabled}" />
                                 <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource DisabledButtonColour}" />
                              </VisualState.Setters>
                           </VisualState>

                        </VisualStateGroup>

                     </VisualStateManager.VisualStateGroups>
                     <ContentPresenter x:Name="ContentPresenter" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />

                  </Grid>

               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <!-- Close tab button -->
      <Style x:Key="TabCloseButton" TargetType="Button">
         <Setter Property="Height" Value="34"/>
         <Setter Property="Width" Value="28"/>
         <Setter Property="Margin" Value="1"/>
         <Setter Property="BorderThickness" Value="0"/>
         <Setter Property="Background" Value="Transparent"/>
         <Setter Property="Foreground" Value="{ThemeResource ButtonColour}"/>
      </Style>

      <!-- A tab -->
      <Style x:Key="ListViewItemRevealStyle" TargetType="ListViewItem">
         <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
         <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
         <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
         <Setter Property="Foreground" Value="{ThemeResource ButtonColour}"/>
         <Setter Property="TabNavigation" Value="Local"/>
         <Setter Property="IsHoldingEnabled" Value="True"/>
         <Setter Property="HorizontalContentAlignment" Value="Left"/>
         <Setter Property="VerticalContentAlignment" Value="Center"/>
         <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
         <Setter Property="MinHeight" Value="30"/>
         <Setter Property="AllowDrop" Value="False"/>
         <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
         <Setter Property="FocusVisualMargin" Value="0"/>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="ListViewItem">
                  <ListViewItemPresenter x:Name="Root"
                                          CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                                          ContentMargin="0"
                                          CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          CheckMode="{ThemeResource ListViewItemCheckMode}"
                                          DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                          DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                          DragBackground="{ThemeResource ListViewItemDragBackground}"
                                          DragForeground="{ThemeResource ListViewItemDragForeground}"
                                          FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                                          FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                                          FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Control.IsTemplateFocusTarget="True"
                                          PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                                          PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                                          PointerOverForeground="{ThemeResource ReceptusLight}"
                                          PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
                                          RevealBorderThickness="1,0"
                                          ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                          RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}"
                                          RevealBackground="{ThemeResource ListViewItemRevealBackground}"
                                          SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                                          SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}"
                                          SelectedBackground="{ThemeResource AppBarBackgroundThemeBrush}"
                                          SelectedPressedBackground="{ThemeResource AppBarBackgroundThemeBrush}"
                                          SelectedPointerOverBackground="{ThemeResource AppBarBackgroundThemeBrush}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                     <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                           <VisualState x:Name="Normal"/>
                           <VisualState x:Name="Selected">
                              <VisualState.Setters>
                                 <Setter Target="Root.Foreground" Value="{ThemeResource ButtonColour}"/>
                              </VisualState.Setters>
                           </VisualState>
                           <VisualState x:Name="PointerOver">
                              <VisualState.Setters>
                                 <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                 <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                 <Setter Target="Root.Foreground" Value="{ThemeResource ButtonColour}"/>
                              </VisualState.Setters>
                           </VisualState>
                           <VisualState x:Name="PointerOverSelected">
                              <VisualState.Setters>
                                 <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                 <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                              </VisualState.Setters>
                           </VisualState>
                           <VisualState x:Name="PointerOverPressed">
                              <VisualState.Setters>
                                 <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                 <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                              </VisualState.Setters>
                           </VisualState>
                           <VisualState x:Name="Pressed">
                              <VisualState.Setters>
                                 <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                 <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                 <Setter Target="Root.Foreground" Value="{ThemeResource ButtonColour}"/>
                              </VisualState.Setters>
                           </VisualState>
                           <VisualState x:Name="PressedSelected">
                              <VisualState.Setters>
                                 <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                 <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                 <Setter Target="Root.Foreground" Value="{ThemeResource ButtonColour}"/>
                              </VisualState.Setters>
                           </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="DisabledStates">
                           <VisualState x:Name="Enabled"/>
                           <VisualState x:Name="Disabled">
                              <VisualState.Setters>
                                 <Setter Target="Root.RevealBorderThickness" Value="0"/>
                              </VisualState.Setters>
                           </VisualState>
                        </VisualStateGroup>
                     </VisualStateManager.VisualStateGroups>
                  </ListViewItemPresenter>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <Style x:Key="TabListViewItemContainer" BasedOn="{StaticResource ListViewItemRevealStyle}" TargetType="ListViewItem"/>

      <Style x:Key="BrowserSearchTextBox" TargetType="TextBox">
         <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}"/>
         <Setter Property="SelectionHighlightColor" Value="{ThemeResource ReceptusRed}"/>
         <Setter Property="Background" Value="Transparent"/>
         <Setter Property="BorderThickness" Value="0"/>
         <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
         <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
         <Setter Property="Padding" Value="5.5"/>
         <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}"/>
         <Setter Property="ContextFlyout" Value="{StaticResource TextControlCommandBarContextFlyout}"/>
         <Setter Property="SelectionFlyout" Value="{StaticResource TextControlCommandBarSelectionFlyout}"/>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="TextBox">
                  <Grid>
                     <Grid.Resources>
                        <Style x:Name="DeleteButtonStyle" TargetType="Button">
                           <Setter Property="Template">
                              <Setter.Value>
                                 <ControlTemplate TargetType="Button">
                                    <Grid x:Name="ButtonLayoutGrid" Background="{ThemeResource TextControlButtonBackground}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{ThemeResource TextControlButtonBorderBrush}">
                                       <VisualStateManager.VisualStateGroups>
                                          <VisualStateGroup x:Name="CommonStates">
                                             <VisualState x:Name="Normal"/>
                                             <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                   <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}"/>
                                                   </ObjectAnimationUsingKeyFrames>
                                                   <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}"/>
                                                   </ObjectAnimationUsingKeyFrames>
                                                   <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}"/>
                                                   </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                             </VisualState>
                                             <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                   <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}"/>
                                                   </ObjectAnimationUsingKeyFrames>
                                                   <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}"/>
                                                   </ObjectAnimationUsingKeyFrames>
                                                   <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}"/>
                                                   </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                             </VisualState>
                                             <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                   <DoubleAnimation Duration="0" Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Opacity" To="0"/>
                                                </Storyboard>
                                             </VisualState>
                                          </VisualStateGroup>
                                       </VisualStateManager.VisualStateGroups>
                                       <TextBlock x:Name="GlyphElement" AutomationProperties.AccessibilityView="Raw" FontStyle="Normal" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource TextControlButtonForeground}" FontSize="12" HorizontalAlignment="Center" Text="&#xE10A;" VerticalAlignment="Center"/>
                                    </Grid>
                                 </ControlTemplate>
                              </Setter.Value>
                           </Setter>
                        </Style>
                     </Grid.Resources>
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                     </Grid.ColumnDefinitions>
                     <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                     </Grid.RowDefinitions>
                     <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                           <VisualState x:Name="Normal"/>
                           <VisualState x:Name="Disabled">
                              <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundDisabled}}"/>
                                 </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="PointerOver">
                              <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundPointerOver}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundPointerOver}}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}"/>
                                 </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="Focused">
                              <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundFocused}}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="RequestedTheme">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Light"/>
                                 </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="ButtonStates">
                           <VisualState x:Name="ButtonVisible">
                              <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                       <DiscreteObjectKeyFrame.Value>
                                          <Visibility>Visible</Visibility>
                                       </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                 </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="ButtonCollapsed"/>
                        </VisualStateGroup>
                     </VisualStateManager.VisualStateGroups>
                     <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.ColumnSpan="2" Grid.Column="0" FontWeight="Normal" Foreground="{ThemeResource TextControlHeaderForeground}" Margin="{StaticResource TextBoxTopHeaderMargin}" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                     <Border x:Name="BorderElement" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" Grid.ColumnSpan="2" Grid.Column="0" Control.IsTemplateFocusTarget="True" MinHeight="{ThemeResource TextControlThemeMinHeight}" MinWidth="{ThemeResource TextControlThemeMinWidth}" Grid.RowSpan="1" Grid.Row="1"/>
                     <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" Grid.Column="0" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="Disabled"/>
                     <TextBlock x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Grid.Column="0" Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForeground}}" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding PlaceholderText}" TextWrapping="{TemplateBinding TextWrapping}" TextAlignment="{TemplateBinding TextAlignment}"/>
                     <Button x:Name="DeleteButton" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" FontSize="{TemplateBinding FontSize}" IsTabStop="False" MinWidth="34" Margin="{ThemeResource HelperButtonThemePadding}" Grid.Row="1" Style="{StaticResource DeleteButtonStyle}" VerticalAlignment="Stretch" Visibility="Collapsed"/>
                     <ContentPresenter x:Name="DescriptionPresenter" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Description}" Grid.ColumnSpan="2" Grid.Column="0" Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" Grid.Row="2" x:Load="False"/>
                  </Grid>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <!-- Link Buttons -->
      <Style x:Key="TextBlockButtonStyle" TargetType="ButtonBase">
         <Setter Property="Background" Value="Transparent" />
         <Setter Property="Foreground" Value="{ThemeResource ReceptusGrey}" />
         <Setter Property="MinWidth" Value="0" />
         <Setter Property="MinHeight" Value="0" />
         <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="ButtonBase">
                  <Grid Margin="0" Padding="5" Background="{TemplateBinding Background}">
                     <ContentPresenter x:Name="Text"
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                     <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                           <VisualState x:Name="Normal" />

                           <VisualState x:Name="PointerOver">

                              <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonForegroundPointerOver}" />
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Background">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonBackgroundPointerOver}" />
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="BorderBrush">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonBorderBrushPointerOver}" />
                                 </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualState>

                           <VisualState x:Name="Pressed">

                              <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonForegroundPressed}" />
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Background">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonBackgroundPressed}" />
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="BorderBrush">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonBorderBrushPressed}" />
                                 </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualState>

                           <VisualState x:Name="Disabled">

                              <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonForegroundDisabled}" />
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Background">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonBackgroundDisabled}" />
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="BorderBrush">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkButtonBorderBrushDisabled}" />
                                 </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualState>

                        </VisualStateGroup>

                     </VisualStateManager.VisualStateGroups>

                  </Grid>

               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>

      <!-- Verses -->
      <Style x:Key="ReadableText" TargetType="RichTextBlock">
         <Setter Property="FontFamily" Value="/Assets/Fonts/Roboto.ttf#Roboto Slab"/>
         <Setter Property="FontSize" Value="16"/>
         <Setter Property="LineHeight" Value="25"/>
         <Setter Property="TextWrapping" Value="WrapWholeWords"/>
         <Setter Property="TextAlignment" Value="Left"/>
         <Setter Property="HorizontalAlignment" Value="Stretch"/>
         <Setter Property="VerticalAlignment" Value="Stretch"/>
         <Setter Property="SelectionHighlightColor" Value="{ThemeResource ReceptusRed}"/>
      </Style>

      <!-- Verse numbers -->
      <Style x:Key="VerseNumber" TargetType="RichTextBlock">
         <Setter Property="Foreground" Value="{ThemeResource SystemColorHighlightTextBrush}"/>
         <Setter Property="FontSize" Value="16"/>
      </Style>
   </Page.Resources>



   <Grid Background="Transparent"
         Name="grdWindowRoot">
      <Grid.RowDefinitions>
         <RowDefinition Height="Auto"/>
         <!-- Title bar -->
         <RowDefinition />
         <!-- Main content -->
      </Grid.RowDefinitions>


      <!-- Official title bar (must be defined in code for the custom title bar) -->
      <Grid x:Name="grdTitleBar" Background="Transparent">
         <!-- Width of the padding columns is set in LayoutMetricsChanged handler. -->
         <!-- Using padding columns instead of Margin ensures that the background
              paints the area under the caption control buttons (for transparent buttons). -->
         <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="LeftPaddingColumn" Width="0"/>
            <ColumnDefinition/>
            <ColumnDefinition x:Name="RightPaddingColumn" Width="0"/>
         </Grid.ColumnDefinitions>
      </Grid>

      <!-- Actual tabbed interface -->
      <Grid>
         <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="cdLeftPadding" Width="0"/>
            <ColumnDefinition Width="Auto"/>
            <!-- Width of the tabs and buttons -->
            <ColumnDefinition Width="1*"/>
            <!-- Stretch area -->
            <ColumnDefinition x:Name="cdRightPadding" Width="0"/>
         </Grid.ColumnDefinitions>

         <!-- Left padding -->
         <StackPanel Orientation="Horizontal"
                     Grid.Column="0"/>

         <!-- Tabs -->
         <StackPanel Name="spTabArea"
                     Orientation="Horizontal"
                     Background="Transparent"
                     Grid.Column="1">

            <!-- Home Button -->
            <!--<Button Style="{StaticResource TabBarButton}"
                    Name="Home" Click="Home_Click"
                    >
               <FontIcon FontSize="15" Glyph="&#xE80F;"/>
            </Button>-->

            <!-- Tab List -->
            <ListView ItemContainerStyle="{StaticResource TabListViewItemContainer}"
                      x:Name="lvTabs"
                      ItemsSource="{x:Bind Tabs}"
                      Height="Auto"
                      Background="Transparent"
                      SelectionChanged="LvTabs_SelectionChanged">
               <ListView.ItemsPanel>
                  <ItemsPanelTemplate>
                     <StackPanel Orientation="Horizontal"/>
                  </ItemsPanelTemplate>
               </ListView.ItemsPanel>
               <ListView.ItemTemplate>
                  <DataTemplate x:DataType="local1:BrowserTab">
                     <StackPanel Orientation="Horizontal"
                                 Height="30"
                                 Padding="10,0,2,0">
                        <TextBlock Text="{x:Bind Reference.Version}"
                                   FontSize="12"
                                   Margin="0,0,4,0"
                                   VerticalAlignment="Center"/>
                        <TextBlock Text="{x:Bind Reference}"
                                   FontWeight="Bold"
                                   FontSize="12"
                                   VerticalAlignment="Center"/>
                        <Button Style="{StaticResource TabCloseButton}"
                                Name="btnCloseTab"
                                Tag="{x:Bind Guid}"
                                Click="BtnCloseTab_Click">
                           <FontIcon FontSize="10" Glyph="&#xE711;"/>
                        </Button>
                     </StackPanel>
                  </DataTemplate>
               </ListView.ItemTemplate>
            </ListView>

            <!-- New Tab Button -->
            <Button Name="btnNewTab"
                    Style="{ThemeResource TabBarButton}"
                    ToolTipService.ToolTip="New tab (Ctrl+T)"
                    Click="BtnNewTab_Click">
               <FontIcon FontSize="15" Glyph="&#xE710;"/>
               <Button.KeyboardAccelerators>
                  <KeyboardAccelerator Modifiers="Control" Key="T"/>
               </Button.KeyboardAccelerators>
            </Button>
         </StackPanel>

         <!-- Right padding -->
         <StackPanel Orientation="Horizontal"
                     Grid.Column="3"/>
      </Grid>


      <!-- Main Content -->
      <Grid Grid.Column="1"
            Grid.Row="1"
            Background="{ThemeResource ReceptusLight}">
         <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
         </Grid.RowDefinitions>

         <Border Grid.Row="0"
                 Grid.Column="0">

            <ScrollViewer Name="svPageScroller"
                             Margin="0,0,0,0"
                             VerticalScrollBarVisibility="Auto"
                             HorizontalScrollMode="Disabled"
                             HorizontalScrollBarVisibility="Hidden">
               <StackPanel Margin="0, 80">

                  <!-- Compare view (main content) -->
                  <muxc:ItemsRepeater Name="gvCompareVerses">
                     <muxc:ItemsRepeater.ItemTemplate>
                        <DataTemplate x:DataType="local1:Verse">
                           <Grid>
                              <Grid.ColumnDefinitions>
                                 <ColumnDefinition Width="24"/>
                                 <ColumnDefinition Width="1*"/>
                                 <ColumnDefinition Width="{x:Bind ColumnWidth}"/>
                                 <ColumnDefinition Width="{x:Bind CompareWidth}"/>
                              </Grid.ColumnDefinitions>

                              <!-- Verse number -->
                              <TextBlock Text="{x:Bind Number}"
                                      Padding="0,3,5,0"
                                      FontSize="12"
                                      TextAlignment="Right"
                                      FontWeight="Bold"
                                      Grid.Column="0"
                                      Width="24"
                                      Foreground="Gray"
                                      FontFamily="/Assets/Fonts/PalanquinDark.ttf#Palanquin Dark Regular"/>

                              <!-- Verse text -->
                              <RichTextBlock Style="{ThemeResource ReadableText}"
                                          Grid.Column="1">
                                 <Paragraph>
                                    <Run Text="{x:Bind MainText}"/>
                                 </Paragraph>
                              </RichTextBlock>

                              <!-- Compare verse text -->
                              <RichTextBlock Style="{ThemeResource ReadableText}"
                                          Grid.Column="3">
                                 <Paragraph>
                                    <Run Text="{x:Bind SecondText}"/>
                                 </Paragraph>
                              </RichTextBlock>
                           </Grid>
                        </DataTemplate>
                     </muxc:ItemsRepeater.ItemTemplate>
                  </muxc:ItemsRepeater>
               </StackPanel>
            </ScrollViewer>
         </Border>

         <Button Name="btnLeftPage"
                 Style="{ThemeResource CommandButton}"
                 Height="50"
                 Click="BtnLeftPage_Click"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Center"
                 ToolTipService.ToolTip="Previous chapter (Left arrow)">
            <FontIcon Glyph="&#xE76B;" /><!-- Chevron left -->
            <Button.KeyboardAccelerators>
               <KeyboardAccelerator Modifiers="None" Key="Left"/>
            </Button.KeyboardAccelerators>
         </Button>

         <Button Name="btnRightPage"
                 Style="{ThemeResource CommandButton}"
                 Height="50"
                 Click="BtnRightPage_Click"
                 HorizontalAlignment="Right"
                 VerticalAlignment="Center"
                 ToolTipService.ToolTip="Next chapter (Right arrow)">
            <FontIcon Glyph="&#xE76C;" /><!-- Chevron right -->
            <Button.KeyboardAccelerators>
               <KeyboardAccelerator Modifiers="None" Key="Right"/>
            </Button.KeyboardAccelerators>
         </Button>

         <!-- Command Bar -->
         <Grid Height="40"
               VerticalAlignment="Top"
               Background="Transparent"
               BorderBrush="{ThemeResource ReceptusGrey}"
               BorderThickness="0,0,0,1"
               Grid.Row="0">
            <Grid.ColumnDefinitions>
               <ColumnDefinition Width="130"/>
               <ColumnDefinition Width="1*"/>
               <ColumnDefinition Width="90"/>
            </Grid.ColumnDefinitions>

            <!-- Previous and Next buttons -->
            <StackPanel Grid.Column="0"
                        Orientation="Horizontal"
                        Background="{ThemeResource AppBarBackgroundThemeBrush}">

               <!-- Back -->
               <Button Style="{ThemeResource CommandButton}"
                       Name="btnPrevious"
                       ToolTipService.ToolTip="Previous"
                       Click="BtnPrevious_Click">
                  <Button.KeyboardAccelerators>
                     <KeyboardAccelerator Modifiers="Control" Key="Left"/>
                  </Button.KeyboardAccelerators>
                  <FontIcon FontSize="15" Glyph="&#xE72B;"/>
               </Button>

               <!-- Next -->
               <Button Style="{ThemeResource CommandButton}"
                       Name="btnNext"
                       ToolTipService.ToolTip="Next"
                       Click="BtnNext_Click">
                  <Button.KeyboardAccelerators>
                     <KeyboardAccelerator Modifiers="Control" Key="Right"/>
                  </Button.KeyboardAccelerators>
                  <FontIcon FontSize="15" Glyph="&#xE72A;"/>
               </Button>

               <!-- Compare view button -->
               <!--<Button Style="{ThemeResource CommandButton}"
                       Name="btnCompare"
                       ToolTipService.ToolTip="Compare view"
                       Click="BtnCompare_Click">
                  <Button.KeyboardAccelerators>
                  </Button.KeyboardAccelerators>
                  <FontIcon FontSize="15" Glyph="&#xF164;"/>
                  --><!-- Explore content single --><!--
                  <Button.Flyout>
                     <Flyout x:Name="flyCompare" FlyoutPresenterStyle="{ThemeResource Flyout}">
                        <ListView Name="lvCompareVersions"
                                  SelectionMode="None"
                                  ItemsSource="{x:Bind Bibles}"
                                  IsItemClickEnabled="True"
                                  ItemClick="LvCompareVersions_ItemClicked">
                           <ListView.ItemTemplate>
                              <DataTemplate x:DataType="local1:BibleVersion">
                                 <TextBlock Text="{x:Bind Title}"/>
                              </DataTemplate>
                           </ListView.ItemTemplate>
                        </ListView>
                     </Flyout>
                  </Button.Flyout>
               </Button>-->
            </StackPanel>

            <!-- Search -->
            <StackPanel Grid.Column="1"
                        BorderThickness="3"
                        BorderBrush="{ThemeResource AppBarBackgroundThemeBrush}">
               <Grid BorderBrush="{ThemeResource ReceptusGrey}"
                     BorderThickness="1"
                     Background="{ThemeResource ReceptusLightAcrylicElement}">
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="Auto"/>
                     <ColumnDefinition Width="1*"/>
                  </Grid.ColumnDefinitions>

                  <!-- Select version, book name, and chapter -->
                  <StackPanel Orientation="Horizontal">

                     <!-- Select version -->
                     <Button Name="ddbVersion"
                             Style="{ThemeResource TextBlockButtonStyle}"
                             Content="YLT"
                             Click="DdbVersion_Click">
                        <Button.Flyout>
                           <Flyout x:Name="flyVersion" FlyoutPresenterStyle="{StaticResource Flyout}">
                              <StackPanel>
                                 <ListView Name="gvVersions"
                                        SelectionMode="None"
                                        ItemsSource="{x:Bind Bibles}"
                                        IsItemClickEnabled="True"
                                        ItemClick="GvVersions_ItemClick">
                                    <ListView.ItemTemplate>
                                       <DataTemplate x:DataType="local1:BibleVersion">
                                          <TextBlock Text="{x:Bind Title}"/>
                                       </DataTemplate>
                                    </ListView.ItemTemplate>
                                 </ListView>
                                 
                                 <TextBlock Style="{ThemeResource TitleTextBlockStyle}">Compare To</TextBlock>
                                 <ListView Name="lvCompareVersions"
                                           SelectionMode="None"
                                           ItemsSource="{x:Bind Bibles}"
                                           IsItemClickEnabled="True"
                                           ItemClick="LvCompareVersions_ItemClicked">
                                    <ListView.ItemTemplate>
                                       <DataTemplate x:DataType="local1:BibleVersion">
                                          <TextBlock Text="{x:Bind Title}"/>
                                       </DataTemplate>
                                    </ListView.ItemTemplate>
                                 </ListView>

                                 <Button Style="{ThemeResource CommandButton}"
                                         Width="400"
                                         Click="BtnRemoveCompareView_Click"
                                         Name="btnRemoveCompareView"
                                         ToolTipService.ToolTip="Remove the current comparison Bible version">Remove Comparison Version</Button>
                              </StackPanel>
                           </Flyout>
                        </Button.Flyout>
                     </Button>

                     <!-- Select book name -->
                     <Button Name="ddbBook"
                             Style="{ThemeResource TextBlockButtonStyle}"
                             Content="Genesis">
                        <Button.Flyout>
                           <Flyout x:Name="flyBook" FlyoutPresenterStyle="{StaticResource Flyout}">
                              <ListView Name="gvBooks"
                                        SelectionMode="None"
                                        IsItemClickEnabled="True"
                                        ItemClick="GvBooks_ItemClick">
                              </ListView>
                           </Flyout>
                        </Button.Flyout>
                     </Button>

                     <!-- Select chapter number -->
                     <Button Name="ddbChapter"
                             Style="{ThemeResource TextBlockButtonStyle}"
                             Content="1">
                        <Button.Flyout>
                           <Flyout x:Name="flyChapter"
                                   FlyoutPresenterStyle="{StaticResource Flyout}">
                              <GridView Name="lvChapters"
                                        SelectionMode="None"
                                        IsItemClickEnabled="True"
                                        ItemClick="GvChapters_ItemClick">
                              </GridView>
                           </Flyout>
                        </Button.Flyout>
                     </Button>
                  </StackPanel>

                  <TextBox Style="{ThemeResource BrowserSearchTextBox}"
                           Name="asbSearch"
                           x:Uid="asbSearch"
                           TabIndex="0"
                           Grid.Column="1"
                           PlaceholderText="Reference or word search"
                           GotFocus="AsbSearch_GotFocus"
                           KeyDown="AsbSearch_KeyDown"
                           LostFocus="AsbSearch_LostFocus">
                  </TextBox>
               </Grid>
            </StackPanel>


            <!-- Options -->
            <StackPanel Grid.Column="2"
                        Orientation="Horizontal"
                        Background="{ThemeResource AppBarBackgroundThemeBrush}"
                        Width="90"
                        HorizontalAlignment="Right">

               <!-- Play (read out loud) -->
               <!--<Button Name="btnPlay"
                       Style="{StaticResource CommandButton}"
                       ToolTipService.ToolTip="Read aloud (Ctrl+P)"
                       Click="BtnPlay_Click"
                       Margin="7,0,0,0">
                  <Button.KeyboardAccelerators>
                     <KeyboardAccelerator Modifiers="Control" Key="P"/>
                  </Button.KeyboardAccelerators>
                  <FontIcon FontSize="15" Glyph="&#xE768;"/>
               </Button>-->
               <!-- Pause (read out loud) -->
               <!--<Button Name="btnPause"
                       Style="{StaticResource CommandButton}"
                       Visibility="Collapsed"
                       ToolTipService.ToolTip="Pause reading (Space)"
                       Click="BtnPause_Click"
                       Margin="7,0,0,0">
                  <Button.KeyboardAccelerators>
                     <KeyboardAccelerator Modifiers="None" Key="Space"/>
                  </Button.KeyboardAccelerators>
                  <FontIcon FontSize="15" Glyph="&#xE769;"/>
               </Button>-->

               <!-- More hamburger menu -->
               <Button Name="btnMore"
                       Style="{StaticResource CommandButton}"
                       ToolTipService.ToolTip="Menu (Ctrl+M)"
                       FontFamily="Segoe MDL2 Assets"
                       HorizontalAlignment="Right"
                       Margin="45,0">
                  <Button.KeyboardAccelerators>
                     <KeyboardAccelerator Modifiers="Control" Key="M"/>
                  </Button.KeyboardAccelerators>
                  <FontIcon FontSize="15" Glyph="&#xE712;" FontFamily="Segoe MDL2 Assets"/>

                  <!-- Settings menu -->
                  <Button.Flyout>
                     <Flyout x:Name="spMainMenu" FlyoutPresenterStyle="{StaticResource Flyout}">
                        <StackPanel HorizontalAlignment="Left" Padding="20,5">
                           <TextBlock HorizontalAlignment="Left"
                                      HorizontalTextAlignment="Left"
                                      Margin="0,0"
                                      Style="{ThemeResource TitleTextBlockStyle}"
                                      x:Uid="SettingsTitle">Settings</TextBlock>
                           <ComboBox Name="cbDefaultVersion"
                                     Header="Default version"
                                     HorizontalAlignment="Left"
                                     ItemsSource="{x:Bind Bibles}"
                                     SelectionChanged="CbDefaultVersion_SelectionChanged"
                                     x:Uid="cbDefaultVersion">
                              <ComboBox.ItemTemplate>
                                 <DataTemplate x:DataType="local1:BibleVersion">
                                    <TextBlock Text="{x:Bind Title}"/>
                                 </DataTemplate>
                              </ComboBox.ItemTemplate>
                           </ComboBox>

                           <!-- Light/dark theme switch -->
                           <ToggleSwitch Name="tglAppTheme"
                                         Header="Theme"
                                         OffContent="Light"
                                         OnContent="Dark"
                                         IsOn="False"
                                         Toggled="ToggleSwitch_Toggled"
                                         x:Uid="tglAppTheme" />

                           <TextBlock Style="{ThemeResource TitleTextBlockStyle}"
                                      x:Uid="txtCredits">Credits</TextBlock>
                           <RichTextBlock LineHeight="18"
                                          x:Uid="rtbCredits">
                              <Paragraph Margin="0, 5">App programmed by
                                 <Hyperlink NavigateUri="https://www.linkedin.com/in/denisglabrecque/">Denis Labrecque</Hyperlink>, 2019.
                              </Paragraph>
                              <Paragraph Margin="0, 5">The Bible versions used in this application have expired their copyright and are therefore free to use.</Paragraph>
                           </RichTextBlock>
                           <Image Source="/Assets/Receptus-logo-general.png" MaxWidth="250" Margin="20"/>
                        </StackPanel>
                     </Flyout>
                  </Button.Flyout>
               </Button>
            </StackPanel>
         </Grid>
      </Grid>
   </Grid>
</Page>
