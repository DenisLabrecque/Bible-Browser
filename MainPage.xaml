<Page
   x:Class="BibleBrowserUWP.MainPage"
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:local="using:BibleBrowserUWP"
   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
   xmlns:local1="using:BibleBrowser"
   mc:Ignorable="d"
   Background="{ThemeResource SystemControlAccentAcrylicWindowAccentMediumHighBrush }" FontFamily="Segoe MDL2 Assets"
   Name="root">

   <Page.Resources>
      <Style x:Key="CommandButton" TargetType="Button" BasedOn="{StaticResource ButtonRevealStyle}">
         <Setter Property="BorderThickness" Value="1"/>
         <Setter Property="Margin" Value="1"/>
         <Setter Property="Background" Value="Transparent"/>
         <Setter Property="FontSize" Value="15"/>
         <Setter Property="Height" Value="38"/>
         <Setter Property="Width" Value="40"/>
      </Style>

      <Style x:Key="TabBarButton" TargetType="Button" BasedOn="{StaticResource CommandButton}">
         <Setter Property="Height" Value="30"/>
         <Setter Property="Width" Value="35"/>
      </Style>

      <Style x:Key="TabCloseButton" TargetType="Button">
         <Setter Property="Height" Value="34"/>
         <Setter Property="Width" Value="28"/>
         <Setter Property="Margin" Value="1"/>
         <Setter Property="BorderThickness" Value="0"/>
         <Setter Property="Background" Value="Transparent"/>
      </Style>

      <Style x:Key="VerseNumber" TargetType="Run">
         <Setter Property="Foreground" Value="{StaticResource SystemColorHighlightTextBrush}"/>
         <Setter Property="FontSize" Value="16"/>
         <Setter Property="CharacterSpacing" Value="20"/>
      </Style>

      <!-- A tab container -->
      <Style x:Key="ListViewItemRevealStyle" TargetType="ListViewItem">
         <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
         <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
         <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
         <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
         <Setter Property="TabNavigation" Value="Local"/>
         <Setter Property="IsHoldingEnabled" Value="True"/>
         <Setter Property="HorizontalContentAlignment" Value="Left"/>
         <Setter Property="VerticalContentAlignment" Value="Center"/>
         <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
         <Setter Property="MinHeight" Value="30"/>
         <Setter Property="AllowDrop" Value="False"/>
         <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
         <Setter Property="FocusVisualMargin" Value="0"/>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="ListViewItem">
                  <ListViewItemPresenter x:Name="Root" 
                                               CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                                               ContentMargin="0"
                                               CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                                               ContentTransitions="{TemplateBinding ContentTransitions}"
                                               CheckMode="{ThemeResource ListViewItemCheckMode}"
                                               DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                               DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                               DragBackground="{ThemeResource ListViewItemDragBackground}"
                                               DragForeground="{ThemeResource ListViewItemDragForeground}"
                                               FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                                               FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                                               FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Control.IsTemplateFocusTarget="True"
                                               PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                                               PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                                               PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                                               PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
                                               RevealBorderThickness="1,0"
                                               ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                               RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}"
                                               RevealBackground="{ThemeResource ListViewItemRevealBackground}"
                                               SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                                               SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}"
                                               SelectedBackground="{ThemeResource AppBarBackgroundThemeBrush}"
                                               SelectedPressedBackground="{ThemeResource AppBarBackgroundThemeBrush}"
                                               SelectedPointerOverBackground="{ThemeResource AppBarBackgroundThemeBrush}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                     <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                           <VisualState x:Name="Normal"/>
                           <VisualState x:Name="Selected"/>
                           <VisualState x:Name="PointerOver">
                              <VisualState.Setters>
                                 <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                 <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                              </VisualState.Setters>
                           </VisualState>
                           <VisualState x:Name="PointerOverSelected">
                              <VisualState.Setters>
                                 <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                 <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                              </VisualState.Setters>
                           </VisualState>
                           <VisualState x:Name="PointerOverPressed">
                              <VisualState.Setters>
                                 <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                 <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                              </VisualState.Setters>
                           </VisualState>
                           <VisualState x:Name="Pressed">
                              <VisualState.Setters>
                                 <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                 <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                              </VisualState.Setters>
                           </VisualState>
                           <VisualState x:Name="PressedSelected">
                              <VisualState.Setters>
                                 <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                 <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                              </VisualState.Setters>
                           </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="DisabledStates">
                           <VisualState x:Name="Enabled"/>
                           <VisualState x:Name="Disabled">
                              <VisualState.Setters>
                                 <Setter Target="Root.RevealBorderThickness" Value="0"/>
                              </VisualState.Setters>
                           </VisualState>
                        </VisualStateGroup>
                     </VisualStateManager.VisualStateGroups>
                  </ListViewItemPresenter>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>
      <Style x:Key="TabListViewItemContainer" BasedOn="{StaticResource ListViewItemRevealStyle}" TargetType="ListViewItem"/>
      <Style x:Key="BrowserSearchTextBox" TargetType="TextBox">
         <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}"/>
         <Setter Property="Background" Value="Transparent"/>
         <Setter Property="BorderThickness" Value="0"/>
         <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
         <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
         <Setter Property="Padding" Value="5.5"/>
         <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}"/>
         <Setter Property="ContextFlyout" Value="{StaticResource TextControlCommandBarContextFlyout}"/>
         <Setter Property="SelectionFlyout" Value="{StaticResource TextControlCommandBarSelectionFlyout}"/>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="TextBox">
                  <Grid>
                     <Grid.Resources>
                        <Style x:Name="DeleteButtonStyle" TargetType="Button">
                           <Setter Property="Template">
                              <Setter.Value>
                                 <ControlTemplate TargetType="Button">
                                    <Grid x:Name="ButtonLayoutGrid" Background="{ThemeResource TextControlButtonBackground}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{ThemeResource TextControlButtonBorderBrush}">
                                       <VisualStateManager.VisualStateGroups>
                                          <VisualStateGroup x:Name="CommonStates">
                                             <VisualState x:Name="Normal"/>
                                             <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                   <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}"/>
                                                   </ObjectAnimationUsingKeyFrames>
                                                   <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}"/>
                                                   </ObjectAnimationUsingKeyFrames>
                                                   <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}"/>
                                                   </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                             </VisualState>
                                             <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                   <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}"/>
                                                   </ObjectAnimationUsingKeyFrames>
                                                   <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}"/>
                                                   </ObjectAnimationUsingKeyFrames>
                                                   <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                      <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}"/>
                                                   </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                             </VisualState>
                                             <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                   <DoubleAnimation Duration="0" Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Opacity" To="0"/>
                                                </Storyboard>
                                             </VisualState>
                                          </VisualStateGroup>
                                       </VisualStateManager.VisualStateGroups>
                                       <TextBlock x:Name="GlyphElement" AutomationProperties.AccessibilityView="Raw" FontStyle="Normal" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource TextControlButtonForeground}" FontSize="12" HorizontalAlignment="Center" Text="&#xE10A;" VerticalAlignment="Center"/>
                                    </Grid>
                                 </ControlTemplate>
                              </Setter.Value>
                           </Setter>
                        </Style>
                     </Grid.Resources>
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                     </Grid.ColumnDefinitions>
                     <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                     </Grid.RowDefinitions>
                     <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                           <VisualState x:Name="Normal"/>
                           <VisualState x:Name="Disabled">
                              <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundDisabled}}"/>
                                 </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="PointerOver">
                              <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundPointerOver}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundPointerOver}}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}"/>
                                 </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="Focused">
                              <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundFocused}}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}"/>
                                 </ObjectAnimationUsingKeyFrames>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="RequestedTheme">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Light"/>
                                 </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="ButtonStates">
                           <VisualState x:Name="ButtonVisible">
                              <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                       <DiscreteObjectKeyFrame.Value>
                                          <Visibility>Visible</Visibility>
                                       </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                 </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualState>
                           <VisualState x:Name="ButtonCollapsed"/>
                        </VisualStateGroup>
                     </VisualStateManager.VisualStateGroups>
                     <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.ColumnSpan="2" Grid.Column="0" FontWeight="Normal" Foreground="{ThemeResource TextControlHeaderForeground}" Margin="{StaticResource TextBoxTopHeaderMargin}" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                     <Border x:Name="BorderElement" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" Grid.ColumnSpan="2" Grid.Column="0" Control.IsTemplateFocusTarget="True" MinHeight="{ThemeResource TextControlThemeMinHeight}" MinWidth="{ThemeResource TextControlThemeMinWidth}" Grid.RowSpan="1" Grid.Row="1"/>
                     <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" Grid.Column="0" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="Disabled"/>
                     <TextBlock x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Grid.Column="0" Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForeground}}" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding PlaceholderText}" TextWrapping="{TemplateBinding TextWrapping}" TextAlignment="{TemplateBinding TextAlignment}"/>
                     <Button x:Name="DeleteButton" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" FontSize="{TemplateBinding FontSize}" IsTabStop="False" MinWidth="34" Margin="{ThemeResource HelperButtonThemePadding}" Grid.Row="1" Style="{StaticResource DeleteButtonStyle}" VerticalAlignment="Stretch" Visibility="Collapsed"/>
                     <ContentPresenter x:Name="DescriptionPresenter" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Description}" Grid.ColumnSpan="2" Grid.Column="0" Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" Grid.Row="2" x:Load="False"/>
                  </Grid>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>
   </Page.Resources>

   <Grid Background="Transparent">
      <Grid.RowDefinitions>
         <RowDefinition Height="Auto"/>
         <RowDefinition />
      </Grid.RowDefinitions>


      <!-- Official title bar (must be defined in code for the custom title bar) -->
      <Grid x:Name="grdTitleBar"
            Background="Transparent">
         <!-- Width of the padding columns is set in LayoutMetricsChanged handler. -->
         <!-- Using padding columns instead of Margin ensures that the background
              paints the area under the caption control buttons (for transparent buttons). -->
         <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="LeftPaddingColumn" Width="0"/>
            <ColumnDefinition/>
            <ColumnDefinition x:Name="RightPaddingColumn" Width="0"/>
         </Grid.ColumnDefinitions>
      </Grid>


      <!-- Actual tabbed interface -->
      <Grid>
         <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="1*"/>
         </Grid.ColumnDefinitions>

         <!-- Tabs -->
         <StackPanel Orientation="Horizontal"
                        Background="Transparent">

            <!-- Home Button -->
            <Button Style="{StaticResource TabBarButton}"
                    Name="Home" Click="Home_Click"
                    >
               <FontIcon FontSize="15" Glyph="&#xE80F;"/>
            </Button>

            <!-- Tab List -->
            <ListView ItemContainerStyle="{StaticResource TabListViewItemContainer}" x:Name="lvTabs"
                          ItemsSource="{x:Bind Tabs}"
                          Height="Auto"
                          Background="Transparent"
                          SelectionChanged="LvTabs_SelectionChanged"
                          >
               <ListView.ItemsPanel>
                  <ItemsPanelTemplate>
                     <StackPanel Orientation="Horizontal" MinWidth="100" />
                  </ItemsPanelTemplate>
               </ListView.ItemsPanel>
               <ListView.ItemTemplate>
                  <DataTemplate x:DataType="local1:BrowserTab">
                     <StackPanel Orientation="Horizontal"
                                        Height="30"
                                        Padding="10,0,2,0">
                        <TextBlock Text="{x:Bind Reference.Version}"
                                           FontSize="12"
                                           Margin="0,0,4,0"
                                           VerticalAlignment="Center"/>
                        <TextBlock Text="{x:Bind Reference}"
                                           FontWeight="Bold"
                                           FontSize="12"
                                           VerticalAlignment="Center"/>
                        <Button Style="{StaticResource TabCloseButton}"
                                Name="btnCloseTab"
                                Tag="{x:Bind Guid}"
                                Click="BtnCloseTab_Click">
                           <FontIcon FontSize="10" Glyph="&#xE711;"/>
                        </Button>
                     </StackPanel>
                  </DataTemplate>
               </ListView.ItemTemplate>
            </ListView>

            <!-- New Tab Button -->
            <Button Name="btnNewTab"
                    Style="{StaticResource TabBarButton}"
                    ToolTipService.ToolTip="New tab (Ctrl+T)"
                    Click="BtnNewTab_Click">
               <FontIcon FontSize="15" Glyph="&#xE710;"/>
               <Button.KeyboardAccelerators>
                  <KeyboardAccelerator Modifiers="Control" Key="T"/>
               </Button.KeyboardAccelerators>
            </Button>
         </StackPanel>
      </Grid>


      <!-- Main Content -->
      <Grid Grid.Column="1"
            Grid.Row="1"
            Background="White">
         <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
         </Grid.RowDefinitions>

         <ScrollViewer Grid.Row="0"
                       Grid.Column="0"
                       Margin="0,0,0,0"
                       HorizontalScrollMode="Disabled"
                       HorizontalScrollBarVisibility="Hidden"
                       VerticalScrollBarVisibility="Hidden">
            <Grid>
               <Grid.ColumnDefinitions>
                  <ColumnDefinition/>
               </Grid.ColumnDefinitions>
               <Grid.RowDefinitions>
                  <RowDefinition Height="1*"/>
               </Grid.RowDefinitions>
               <RichTextBlock Name="rtbVerses"
                              Margin="0,80,0,90"
                              MaxWidth="600"
                              MinWidth="300"
                              FontFamily="/Assets/Fonts/Roboto.ttf#Roboto Slab"
                              FontSize="16"
                              LineHeight="25"
                           TextWrapping="WrapWholeWords"
                           TextAlignment="Left"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch">
                  <Paragraph>Quisque diam erat, suscipit at purus non, bibendum molestie urna. Mauris pulvinar mauris lectus, vel pellentesque orci ultrices quis. Nam aliquam, libero in pharetra rhoncus, arcu orci vestibulum sapien, sit amet cursus nisi lectus vitae turpis. Pellentesque tempus ligula non metus maximus, ac feugiat felis facilisis. Sed ut lorem ligula. In hac habitasse platea dictumst. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Phasellus nec tristique neque. Maecenas eu tincidunt arcu. Sed tempor, nibh sit amet vehicula finibus, elit ligula ultrices dui, nec tincidunt eros erat sit amet lorem. Donec posuere sagittis velit. Nulla facilisi. Donec tempor, velit ac pulvinar convallis, dui erat ultricies odio, non imperdiet diam magna vitae ex. Quisque auctor hendrerit elementum. Quisque quis eros finibus leo commodo sodales id ut tellus. Donec suscipit eget felis sed sodales.</Paragraph>
                  <Paragraph>Nam sed convallis arcu, a tempor ex. Curabitur ut ante a massa fermentum tristique eu vitae nisi. Donec et lectus nec mauris pellentesque pellentesque eu nec tellus. Maecenas fermentum ullamcorper condimentum. Pellentesque ut blandit eros. Pellentesque ornare volutpat erat ut commodo. Nam ut ultricies tellus, vitae tristique ex. Aenean varius blandit ipsum, quis sollicitudin purus interdum tincidunt. Phasellus a odio lacus. In at libero nec lacus vulputate iaculis.</Paragraph>
                  <Paragraph>Donec semper pulvinar turpis, ut ullamcorper metus vehicula at. Donec consectetur sed ex ac semper. Aenean et nulla turpis. Praesent orci leo, gravida rutrum finibus id, porttitor quis ligula. Donec nec lectus sit amet lectus tempus faucibus vel sit amet est. Mauris eu nulla non purus sollicitudin consequat. Sed et ligula a mauris gravida scelerisque at et sapien. Fusce id dictum metus, nec bibendum nunc. Nunc erat erat, bibendum sit amet aliquet id, gravida vel magna. In cursus ex eget leo congue pharetra. Vivamus vitae mattis risus. Nullam condimentum eros dolor. Aliquam fermentum varius libero nec aliquam. Praesent ac enim vitae enim egestas maximus. Etiam non nisl vitae sapien gravida commodo.</Paragraph>
               </RichTextBlock>
            </Grid>
         </ScrollViewer>


         <!-- Command Bar -->
         <Grid Height="40"
               VerticalAlignment="Top"
               Background="Transparent">
            <Grid.ColumnDefinitions>
               <ColumnDefinition Width="90"/>
               <ColumnDefinition Width="1*"/>
               <ColumnDefinition Width="90"/>
            </Grid.ColumnDefinitions>

            <!-- Previous and Next buttons -->
            <StackPanel Grid.Column="0"
                        Orientation="Horizontal"
                        Background="{StaticResource AppBarBackgroundThemeBrush}">

               <!-- Back -->
               <Button Style="{StaticResource CommandButton}"
                       Name="btnPrevious"
                       ToolTipService.ToolTip="Back (Ctrl+Left Arrow)"
                       Click="BtnPrevious_Click">
                  <Button.KeyboardAccelerators>
                     <KeyboardAccelerator Modifiers="Control" Key="Left"/>
                  </Button.KeyboardAccelerators>
                  <FontIcon FontSize="15" Glyph="&#xE72B;"/>
               </Button>

               <!-- Next -->
               <Button Style="{StaticResource CommandButton}"
                       Name="btnNext"
                       ToolTipService.ToolTip="Forward (Ctrl+Right Arrow)"
                       Click="BtnNext_Click">
                  <Button.KeyboardAccelerators>
                     <KeyboardAccelerator Modifiers="Control" Key="Right"/>
                  </Button.KeyboardAccelerators>
                  <FontIcon FontSize="15" Glyph="&#xE72A;"/>
               </Button>
            </StackPanel>

            <!-- Search -->
            <StackPanel Grid.Column="1"
                            BorderThickness="5"
                            BorderBrush="{StaticResource AppBarBackgroundThemeBrush}">
               <Grid BorderBrush="Gray"
                     BorderThickness="1"
                     Background="White">
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="Auto"/>
                     <ColumnDefinition Width="1*"/>
                  </Grid.ColumnDefinitions>

                  <!-- Select version, book name, and chapter -->
                  <StackPanel Orientation="Horizontal">
                     
                     <!-- Select version -->
                     <Button Name="ddbVersion"
                             Style="{StaticResource TextBlockButtonStyle}"
                             Content="YLT">
                        <Button.Flyout>
                           <Flyout x:Name="flyVersion">
                              <Flyout.FlyoutPresenterStyle>
                                 <Style TargetType="FlyoutPresenter">
                                    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
                                 </Style>
                              </Flyout.FlyoutPresenterStyle>
                              <GridView Name="gvVersions"
                                        SelectionMode="None"
                                        IsItemClickEnabled="True"
                                        ItemClick="GvVersions_ItemClick">
                                 <GridView.ItemTemplate>
                                    <DataTemplate x:DataType="local1:BibleVersion">
                                       <TextBlock Text="{x:Bind Title}"/>
                                    </DataTemplate>
                                 </GridView.ItemTemplate>
                              </GridView>
                           </Flyout>
                        </Button.Flyout>
                     </Button>

                     <!-- Select book name -->
                     <Button Name="ddbBook"
                             Style="{StaticResource TextBlockButtonStyle}"
                             Content="Genesis">
                        <Button.Flyout>
                           <Flyout x:Name="flyBook">
                              <Flyout.FlyoutPresenterStyle>
                                 <Style TargetType="FlyoutPresenter">
                                    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
                                 </Style>
                              </Flyout.FlyoutPresenterStyle>
                              <GridView Name="gvBooks"
                                        SelectionMode="None"
                                        IsItemClickEnabled="True"
                                        ItemClick="GvBooks_ItemClick">
                              </GridView>
                           </Flyout>
                        </Button.Flyout>
                     </Button>

                     <!-- Select chapter number -->
                     <Button Name="ddbChapter"
                             Style="{StaticResource TextBlockButtonStyle}"
                             Content="1">
                        <Button.Flyout>
                           <Flyout x:Name="flyChapter">
                              <Flyout.FlyoutPresenterStyle>
                                 <Style TargetType="FlyoutPresenter">
                                    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
                                 </Style>
                              </Flyout.FlyoutPresenterStyle>
                              <GridView Name="gvChapters"
                                        SelectionMode="None"
                                        IsItemClickEnabled="True"
                                        ItemClick="GvChapters_ItemClick">
                              </GridView>
                           </Flyout>
                        </Button.Flyout>
                     </Button>
                  </StackPanel>

                  <TextBox Style="{StaticResource BrowserSearchTextBox}" Name="asbSearch"
                           TabIndex="0"
                           Grid.Column="1"
                           PlaceholderText="Reference or word search"
                           GotFocus="AsbSearch_GotFocus"
                           KeyDown="AsbSearch_KeyDown" LostFocus="AsbSearch_LostFocus">
                  </TextBox>
               </Grid>
            </StackPanel>


            <!-- Options -->
            <StackPanel Grid.Column="2"
                        Orientation="Horizontal"
                        FlowDirection="RightToLeft"
                        Background="{StaticResource AppBarBackgroundThemeBrush}">

               <!-- More hamburger menu -->
               <Button Name="btnMore"
                       Style="{StaticResource CommandButton}"
                       ToolTipService.ToolTip="Menu (Ctrl+M)"
                       FontFamily="Segoe MDL2 Assets">
                  <Button.KeyboardAccelerators>
                     <KeyboardAccelerator Modifiers="Control" Key="M"/>
                  </Button.KeyboardAccelerators>
                  <FontIcon FontSize="15" Glyph="&#xE712;" FontFamily="Segoe MDL2 Assets"/>
                  <Button.Flyout>
                     <MenuFlyout Placement="Bottom">
                        
                        <!-- Load from file -->
                        <MenuFlyoutItem Name="mfiAddBible" Text="Add Bible File" Click="MfiAddBible_Click">
                           <MenuFlyoutItem.Icon>
                              <FontIcon Glyph="&#xE8E5;"/><!--OpenFile-->
                           </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        
                        <!--About and Credits-->
                        <MenuFlyoutItem Text="About">
                           <MenuFlyoutItem.Icon>
                              <FontIcon Glyph="&#xE946;"/><!--Info-->
                           </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                     </MenuFlyout>
                  </Button.Flyout>
               </Button>

               <!-- Play (read out loud) -->
               <Button Name="btnPlay"
                            Style="{StaticResource CommandButton}"
                            ToolTipService.ToolTip="Read aloud (Ctrl+P)"
                            Click="BtnPlay_Click">
                  <Button.KeyboardAccelerators>
                     <KeyboardAccelerator Modifiers="Control" Key="P"/>
                  </Button.KeyboardAccelerators>
                  <FontIcon FontSize="15" Glyph="&#xE768;"/>
               </Button>
               <!-- Pause (read out loud) -->
               <Button Name="btnPause"
                       Style="{StaticResource CommandButton}"
                       Visibility="Collapsed"
                       ToolTipService.ToolTip="Pause reading (Space)"
                       Click="BtnPause_Click">
                  <Button.KeyboardAccelerators>
                     <KeyboardAccelerator Modifiers="None" Key="Space"/>
                  </Button.KeyboardAccelerators>
                  <FontIcon FontSize="15" Glyph="&#xE769;"/>
               </Button>
            </StackPanel>
         </Grid>
      </Grid>
   </Grid>
</Page>
